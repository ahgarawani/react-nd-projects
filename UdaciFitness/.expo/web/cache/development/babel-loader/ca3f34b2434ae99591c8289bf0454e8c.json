{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ahgarawani/learning/react-nanodegree/UdaciFitness/App.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AddEntry from \"./components/AddEntry\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from \"./reducers\";\nimport History from \"./components/History\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { FontAwesome, Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Constants from 'expo-constants';\nimport { purple, white } from \"./utils/colors\";\nimport EntryDetail from \"./components/EntryDetail\";\n\nvar UdaciStatusBar = function UdaciStatusBar(_ref) {\n  var backgroundColor = _ref.backgroundColor,\n      props = _objectWithoutProperties(_ref, [\"backgroundColor\"]);\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: backgroundColor,\n      height: Constants.statusBarHeight\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(StatusBar, _extends({\n    translucent: true,\n    backgroundColor: backgroundColor\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  })));\n};\n\nvar Tab = Platform.OS === 'ios' ? createBottomTabNavigator() : createMaterialTopTabNavigator();\nvar Stack = createStackNavigator();\n\nvar TabNav = function TabNav() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          var icon;\n\n          if (route.name === 'Add Entry') {\n            icon = React.createElement(FontAwesome, {\n              name: \"plus-square\",\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 15\n              }\n            });\n          } else if (route.name === 'History') {\n            icon = React.createElement(Ionicons, {\n              name: \"ios-bookmarks\",\n              size: size,\n              color: color,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 15\n              }\n            });\n          }\n\n          return icon;\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: Platform.OS === 'ios' ? purple : white,\n      style: {\n        backgroundColor: Platform.OS === 'ios' ? white : purple\n      },\n      indicatorStyle: {\n        backgroundColor: 'yellow'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"History\",\n    component: History,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Add Entry\",\n    component: AddEntry,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar NavStack = function NavStack() {\n  return React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: NavTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Entry Detail\",\n    component: EntryDetail,\n    options: {\n      headerTintColor: white,\n      headerStyle: {\n        backgroundColor: purple\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default function App() {\n  AsyncStorage.clear();\n  return React.createElement(Provider, {\n    store: createStore(reducer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(UdaciStatusBar, {\n    backgroundColor: purple,\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(NavStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/ahgarawani/learning/react-nanodegree/UdaciFitness/App.js"],"names":["React","AddEntry","createStore","Provider","reducer","History","createBottomTabNavigator","createMaterialTopTabNavigator","createStackNavigator","FontAwesome","Ionicons","NavigationContainer","Constants","purple","white","EntryDetail","UdaciStatusBar","backgroundColor","props","height","statusBarHeight","Tab","Platform","OS","Stack","TabNav","route","tabBarIcon","color","size","icon","name","activeTintColor","style","indicatorStyle","NavStack","NavTab","headerTintColor","headerStyle","App","AsyncStorage","clear","flex"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, StatusBar, Platform } from 'react-native'\nimport  AddEntry from './components/AddEntry'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport History from './components/History'  \nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs' \nimport { createStackNavigator } from '@react-navigation/stack'\nimport { FontAwesome, Ionicons} from '@expo/vector-icons'\nimport { NavigationContainer } from '@react-navigation/native'\nimport Constants from 'expo-constants'\nimport { purple, white } from './utils/colors'\nimport EntryDetail from './components/EntryDetail'\n\nconst UdaciStatusBar = ({backgroundColor, ...props}) => (\n  <View style={{backgroundColor, height: Constants.statusBarHeight}}>\n    <StatusBar translucent backgroundColor={backgroundColor} {...props}/>\n  </View>\n)\n\nconst Tab =\n  Platform.OS === 'ios'\n    ? createBottomTabNavigator()\n    : createMaterialTopTabNavigator()\nconst Stack = createStackNavigator()\n\nconst TabNav = () => (\n  <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ color, size }) => {\n          let icon\n          if (route.name === 'Add Entry') {\n            icon = (\n              <FontAwesome name=\"plus-square\" size={size} color={color} />\n            )\n          } else if (route.name === 'History') {\n            icon = (\n              <Ionicons name=\"ios-bookmarks\" size={size} color={color} />\n            )\n          }\n          return icon\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: Platform.OS === 'ios' ? purple : white,\n        style: {\n          backgroundColor: Platform.OS === 'ios' ? white : purple,\n        },\n        indicatorStyle: {\n          // Android tab indicator (line at the bottom of the tab)\n          backgroundColor: 'yellow',\n        },\n      }}\n    >\n      <Tab.Screen name=\"History\" component={History} />\n      <Tab.Screen name=\"Add Entry\" component={AddEntry} />\n    </Tab.Navigator>\n)\n\nconst NavStack = () => (\n  <Stack.Navigator>\n    <Stack.Screen name='Home' component={NavTab}/>\n    <Stack.Screen name='Entry Detail' component={EntryDetail} options={{\n      headerTintColor: white,\n      headerStyle: {\n        backgroundColor: purple,\n      }}}\n    />\n  </Stack.Navigator>\n)\n\nexport default function App() {\n  AsyncStorage.clear()\n  return (\n    <Provider store={createStore(reducer)}>\n      <View style={{flex: 1}}>\n        <UdaciStatusBar backgroundColor={purple} barStyle='light-content' />\n        <NavigationContainer>\n            <NavStack/>\n          </NavigationContainer>\n      </View>\n    </Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}