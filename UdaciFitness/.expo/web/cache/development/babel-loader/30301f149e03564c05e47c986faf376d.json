{"ast":null,"code":"var _jsxFileName = \"/home/ahgarawani/learning/react-nanodegree/UdaciFitness/utils/helpers.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesome, MaterialIcons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { white } from \"./colors\";\nexport function isBetween(num, x, y) {\n  if (num >= x && num <= y) {\n    return true;\n  }\n\n  return false;\n}\nexport function calculateDirection(heading) {\n  var direction = '';\n\n  if (isBetween(heading, 0, 22.5)) {\n    direction = 'North';\n  } else if (isBetween(heading, 22.5, 67.5)) {\n    direction = 'North East';\n  } else if (isBetween(heading, 67.5, 112.5)) {\n    direction = 'East';\n  } else if (isBetween(heading, 112.5, 157.5)) {\n    direction = 'South East';\n  } else if (isBetween(heading, 157.5, 202.5)) {\n    direction = 'South';\n  } else if (isBetween(heading, 202.5, 247.5)) {\n    direction = 'South West';\n  } else if (isBetween(heading, 247.5, 292.5)) {\n    direction = 'West';\n  } else if (isBetween(heading, 292.5, 337.5)) {\n    direction = 'North West';\n  } else if (isBetween(heading, 337.5, 360)) {\n    direction = 'North';\n  } else {\n    direction = 'Calculating';\n  }\n\n  return direction;\n}\nexport function timeToString() {\n  var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n  var date = new Date(time);\n  var todayUTC = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  return todayUTC.toISOString().split('T')[0];\n}\nexport function getMetricMetaInfo(metric) {\n  var info = {\n    run: {\n      displayName: 'Run',\n      max: 50,\n      unit: 'miles',\n      step: 1,\n      type: 'steppers',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, React.createElement(MaterialIcons, {\n          name: \"directions-run\",\n          color: 'black',\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    bike: {\n      displayName: 'Bike',\n      max: 100,\n      unit: 'miles',\n      step: 1,\n      type: 'steppers',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"bike\",\n          color: 'black',\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    swim: {\n      displayName: 'Swim',\n      max: 9900,\n      unit: 'meters',\n      step: 100,\n      type: 'steppers',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"swim\",\n          color: 'black',\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    sleep: {\n      displayName: 'Sleep',\n      max: 24,\n      unit: 'hours',\n      step: 1,\n      type: 'slider',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"bed\",\n          color: 'black',\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    eat: {\n      displayName: 'Eat',\n      max: 10,\n      unit: 'rating',\n      step: 1,\n      type: 'slider',\n      getIcon: function getIcon() {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"food\",\n          color: 'black',\n          size: 35,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }\n        }));\n      }\n    }\n  };\n  return typeof metric === 'undefined' ? info : info[metric];\n}","map":{"version":3,"sources":["/home/ahgarawani/learning/react-nanodegree/UdaciFitness/utils/helpers.js"],"names":["React","FontAwesome","MaterialIcons","MaterialCommunityIcons","white","isBetween","num","x","y","calculateDirection","heading","direction","timeToString","time","Date","now","date","todayUTC","UTC","getFullYear","getMonth","getDate","toISOString","split","getMetricMetaInfo","metric","info","run","displayName","max","unit","step","type","getIcon","bike","swim","sleep","eat"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport {\n  FontAwesome,\n  MaterialIcons,\n  MaterialCommunityIcons\n} from \"@expo/vector-icons\";\nimport { white } from \"./colors\";\n\nexport function isBetween (num, x, y) {\n    if (num >= x && num <= y) {\n      return true\n    }\n  \n    return false\n  }\n  \n  export function calculateDirection (heading) {\n    let direction = ''\n  \n    if (isBetween(heading, 0, 22.5)) {\n      direction = 'North'\n    } else if (isBetween(heading, 22.5, 67.5)) {\n      direction = 'North East'\n    } else if (isBetween(heading, 67.5, 112.5)) {\n      direction = 'East'\n    } else if (isBetween(heading, 112.5, 157.5)) {\n      direction = 'South East'\n    } else if (isBetween(heading, 157.5, 202.5)) {\n      direction = 'South'\n    } else if (isBetween(heading, 202.5, 247.5)) {\n      direction = 'South West'\n    } else if (isBetween(heading, 247.5, 292.5)) {\n      direction = 'West'\n    } else if (isBetween(heading, 292.5, 337.5)) {\n      direction = 'North West'\n    } else if (isBetween(heading, 337.5, 360)) {\n      direction = 'North'\n    } else {\n      direction = 'Calculating'\n    }\n  \n    return direction\n  }\n  \n  export function timeToString (time = Date.now()) {\n    const date = new Date(time)\n    const todayUTC = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n    return todayUTC.toISOString().split('T')[0]\n  }\n\n  export function getMetricMetaInfo (metric) {\n    const info = {\n      run: {\n        displayName: 'Run',\n        max: 50,\n        unit: 'miles',\n        step: 1,\n        type: 'steppers',\n        getIcon(){\n          return (\n            <View>\n              <MaterialIcons\n                name='directions-run'\n                color={'black'}\n                size={35}\n              />\n            </View>\n          )\n        }\n      },\n      bike: {\n        displayName: 'Bike',\n        max: 100,\n        unit: 'miles',\n        step: 1,\n        type: 'steppers',\n        getIcon(){\n          return (\n            <View>\n              <MaterialCommunityIcons\n                name='bike'\n                color={'black'}\n                size={35}\n              />\n            </View>\n          )\n        }\n      },\n      swim: {\n        displayName: 'Swim',\n        max: 9900,\n        unit: 'meters',\n        step: 100,\n        type: 'steppers',\n        getIcon(){\n          return (\n            <View>\n              <MaterialCommunityIcons\n                name='swim'\n                color={'black'}\n                size={35}\n              />\n            </View>\n          )\n        }\n      },\n      sleep: {\n        displayName: 'Sleep',\n        max: 24,\n        unit: 'hours',\n        step: 1,\n        type: 'slider',\n        getIcon(){\n          return (\n            <View>\n              <FontAwesome\n                name='bed'\n                color={'black'}\n                size={35}\n              />\n            </View>\n          )\n        }\n      },\n      eat: {\n        displayName: 'Eat',\n        max: 10,\n        unit: 'rating',\n        step: 1,\n        type: 'slider',\n        getIcon(){\n          return (\n            <View>\n              <MaterialCommunityIcons\n                name='food'\n                color={'black'}\n                size={35}\n              />\n            </View>\n          )\n        }\n      }\n    }\n\n    return typeof metric === 'undefined'\n      ? info\n      : info[metric]\n  }"]},"metadata":{},"sourceType":"module"}