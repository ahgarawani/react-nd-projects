{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/History.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { receiveEntries, addEntry } from \"../actions\";\nimport { timeToString, getDailyReminderValue } from \"../utils/helpers\";\nimport { fetchCalendarResults } from \"../utils/api\";\nimport { Agenda as UdaciFitnessCalendar } from 'react-native-calendars';\nimport { white, purple } from \"../utils/colors\";\nimport MetricCard from \"./MetricCard\";\nimport { AppLoading } from 'expo';\n\nvar History = function (_Component) {\n  _inherits(History, _Component);\n\n  var _super = _createSuper(History);\n\n  function History() {\n    var _this;\n\n    _classCallCheck(this, History);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      ready: false\n    };\n\n    _this.renderItem = function (_ref, key) {\n      var today = _ref.today,\n          metrics = _objectWithoutProperties(_ref, [\"today\"]);\n\n      return React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }\n      }, today ? React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.noDataText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, today)) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log('Pressed!');\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, React.createElement(MetricCard, {\n        date: formattedDate,\n        metrics: metrics,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var dispatch = this.props.dispatch;\n      fetchCalendarResults().then(function (entries) {\n        return dispatch(receiveEntries(entries));\n      }).then(function (_ref2) {\n        var entries = _ref2.entries;\n\n        if (!entries[timeToString()]) {\n          dispatch(addEntry(_defineProperty({}, timeToString(), getDailyReminderValue())));\n        }\n      }).then(function () {\n        return _this2.setState(function () {\n          return {\n            ready: true\n          };\n        });\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.noDataText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"You didn't log any data on this day.\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var entries = this.props.entries;\n      return React.createElement(UdaciFitnessCalendar, {\n        items: entries,\n        renderItem: this.renderItem,\n        renderEmptyDate: this.renderEmptyDate,\n        theme: {\n          agendaDayTextColor: purple,\n          agendaDayNumColor: purple,\n          agendaTodayColor: purple,\n          agendaKnobColor: purple\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return History;\n}(Component);\n\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: white,\n    borderRadius: Platform.OS === 'ios' ? 16 : 2,\n    padding: 20,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 17,\n    justifyContent: 'center',\n    shadowRadius: 3,\n    shadowOpacity: 0.8,\n    shadowColor: 'rgba(0, 0, 0, 0.24)',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  noDataText: {\n    fontSize: 20,\n    paddingTop: 20,\n    paddingBottom: 20\n  }\n});\n\nfunction mapStateToProps(entries) {\n  return {\n    entries: entries\n  };\n}\n\nexport default connect(mapStateToProps)(History);","map":{"version":3,"sources":["/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/History.js"],"names":["React","Component","connect","receiveEntries","addEntry","timeToString","getDailyReminderValue","fetchCalendarResults","Agenda","UdaciFitnessCalendar","white","purple","MetricCard","AppLoading","History","state","ready","renderItem","key","today","metrics","styles","item","noDataText","console","log","formattedDate","dispatch","props","then","entries","setState","renderEmptyDate","agendaDayTextColor","agendaDayNumColor","agendaTodayColor","agendaKnobColor","StyleSheet","create","backgroundColor","borderRadius","Platform","OS","padding","marginLeft","marginRight","marginTop","justifyContent","shadowRadius","shadowOpacity","shadowColor","shadowOffset","width","height","fontSize","paddingTop","paddingBottom","mapStateToProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,QAAzB;AACA,SAASC,YAAT,EAAuBC,qBAAvB;AACA,SAASC,oBAAT;AACA,SAASC,MAAM,IAAIC,oBAAnB,QAA+C,wBAA/C;AACA,SAASC,KAAT,EAAgBC,MAAhB;AACA,OAAOC,UAAP;AACA,SAASC,UAAT,QAA0B,MAA1B;;IAEMC,O;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;UAmBVC,U,GAAa,gBAAwBC,GAAxB;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,UAAaC,OAAb;;AAAA,aACX,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,KAAK,GACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCJ,KADD,CADF,CADE,GAMF,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAMK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEC,aAAlB;AAAiC,QAAA,OAAO,EAAEN,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAPN,CADW;AAAA,K;;;;;;;WAfb,6BAAqB;AAAA;;AAAA,UACXO,QADW,GACE,KAAKC,KADP,CACXD,QADW;AAGnBpB,MAAAA,oBAAoB,GACjBsB,IADH,CACQ,UAACC,OAAD;AAAA,eAAaH,QAAQ,CAACxB,cAAc,CAAC2B,OAAD,CAAf,CAArB;AAAA,OADR,EAEGD,IAFH,CAEQ,iBAAiB;AAAA,YAAdC,OAAc,SAAdA,OAAc;;AACrB,YAAI,CAACA,OAAO,CAACzB,YAAY,EAAb,CAAZ,EAA8B;AAC5BsB,UAAAA,QAAQ,CAACvB,QAAQ,qBACdC,YAAY,EADE,EACGC,qBAAqB,EADxB,EAAT,CAAR;AAGD;AACF,OARH,EASGuB,IATH,CASQ;AAAA,eAAM,MAAI,CAACE,QAAL,CAAc;AAAA,iBAAO;AAACf,YAAAA,KAAK,EAAE;AAAR,WAAP;AAAA,SAAd,CAAN;AAAA,OATR;AAUD;;;WAkBD,2BAAkB;AAChB,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CADJ;AAOD;;;WAED,kBAAS;AAAA,UACCO,OADD,GACa,KAAKF,KADlB,CACCE,OADD;AAGP,aACE,oBAAC,oBAAD;AACE,QAAA,KAAK,EAAEA,OADT;AAEE,QAAA,UAAU,EAAE,KAAKb,UAFnB;AAGE,QAAA,eAAe,EAAE,KAAKe,eAHxB;AAIE,QAAA,KAAK,EAAE;AACHC,UAAAA,kBAAkB,EAAEtB,MADjB;AAEHuB,UAAAA,iBAAiB,EAAEvB,MAFhB;AAGHwB,UAAAA,gBAAgB,EAAExB,MAHf;AAIHyB,UAAAA,eAAe,EAAEzB;AAJd,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD;;;;EA9DmBV,S;;AAiEtB,IAAMoB,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,eAAe,EAAE7B,KADb;AAEJ8B,IAAAA,YAAY,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,CAFvC;AAGJC,IAAAA,OAAO,EAAE,EAHL;AAIJC,IAAAA,UAAU,EAAE,EAJR;AAKJC,IAAAA,WAAW,EAAE,EALT;AAMJC,IAAAA,SAAS,EAAE,EANP;AAOJC,IAAAA,cAAc,EAAE,QAPZ;AAQJC,IAAAA,YAAY,EAAE,CARV;AASJC,IAAAA,aAAa,EAAE,GATX;AAUJC,IAAAA,WAAW,EAAE,qBAVT;AAWJC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI;AAXV,GADuB;AAiB7B9B,EAAAA,UAAU,EAAE;AACV+B,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,EAFF;AAGVC,IAAAA,aAAa,EAAE;AAHL;AAjBiB,CAAlB,CAAf;;AAwBA,SAASC,eAAT,CAA0B3B,OAA1B,EAAmC;AACjC,SAAO;AACLA,IAAAA,OAAO,EAAPA;AADK,GAAP;AAGD;;AAED,eAAe5B,OAAO,CACpBuD,eADoB,CAAP,CAEb3C,OAFa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text, StyleSheet, Platform, TouchableOpacity } from 'react-native'\nimport { connect } from 'react-redux'\nimport { receiveEntries, addEntry } from '../actions'\nimport { timeToString, getDailyReminderValue } from '../utils/helpers'\nimport { fetchCalendarResults } from '../utils/api'\nimport { Agenda as UdaciFitnessCalendar } from 'react-native-calendars'\nimport { white, purple } from '../utils/colors'\nimport MetricCard from './MetricCard'\nimport { AppLoading} from 'expo'\n\nclass History extends Component {\n    state = {\n        ready: false,\n    }\n\n  componentDidMount () {\n    const { dispatch } = this.props\n\n    fetchCalendarResults()\n      .then((entries) => dispatch(receiveEntries(entries)))\n      .then(({ entries }) => {\n        if (!entries[timeToString()]) {\n          dispatch(addEntry({\n            [timeToString()]: getDailyReminderValue()\n          }))\n        }\n      })\n      .then(() => this.setState(() => ({ready: true})))\n  }\n\n  renderItem = ({ today, ...metrics }, key) => (\n    <View style={styles.item}>\n      {today\n        ? <View>\n            <Text style={styles.noDataText}>\n            {today}\n            </Text>\n        </View>\n        : <TouchableOpacity\n            onPress={() => console.log('Pressed!')}\n        >\n            <MetricCard date={formattedDate} metrics={metrics} />\n        </TouchableOpacity>}\n    </View>\n  )\n\n  renderEmptyDate() {\n    return (\n        <View style={styles.item}>\n            <Text style={styles.noDataText}>\n                You didn't log any data on this day.\n            </Text>\n        </View>\n    )\n  }\n\n  render() {\n    const { entries } = this.props\n\n    return (\n      <UdaciFitnessCalendar\n        items={entries}\n        renderItem={this.renderItem}\n        renderEmptyDate={this.renderEmptyDate}\n        theme={{\n            agendaDayTextColor: purple,\n            agendaDayNumColor: purple,\n            agendaTodayColor: purple,\n            agendaKnobColor: purple\n          }}\n      />\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n    item: {\n      backgroundColor: white,\n      borderRadius: Platform.OS === 'ios' ? 16 : 2,\n      padding: 20,\n      marginLeft: 10,\n      marginRight: 10,\n      marginTop: 17,\n      justifyContent: 'center',\n      shadowRadius: 3,\n      shadowOpacity: 0.8,\n      shadowColor: 'rgba(0, 0, 0, 0.24)',\n      shadowOffset: {\n        width: 0,\n        height: 3\n      },\n    },\n    noDataText: {\n      fontSize: 20,\n      paddingTop: 20,\n      paddingBottom: 20\n    }\n  })\n\nfunction mapStateToProps (entries) {\n  return {\n    entries\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(History)"]},"metadata":{},"sourceType":"module"}