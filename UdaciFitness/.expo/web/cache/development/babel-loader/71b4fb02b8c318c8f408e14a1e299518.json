{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/History.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { receiveEntries, addEntry } from \"../actions\";\nimport { timeToString, getDailyReminderValue } from \"../utils/helpers\";\nimport { fetchCalendarResults } from \"../utils/api\";\n\nvar History = function (_Component) {\n  _inherits(History, _Component);\n\n  var _super = _createSuper(History);\n\n  function History() {\n    _classCallCheck(this, History);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(History, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      var dispatch = this.props.dispatch;\n      fetchCalendarResults().then(function (entries) {\n        return dispatch(receiveEntries(entries));\n      }).then(function (_ref) {\n        var entries = _ref.entries;\n\n        if (!entries[timeToString()]) {\n          dispatch(addEntry(_defineProperty({}, timeToString(), getDailyReminderValue())));\n        }\n      }).then(function () {\n        return _this.setState(function () {\n          return {\n            ready: true\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, JSON.stringify(this.props)));\n    }\n  }]);\n\n  return History;\n}(Component);\n\nfunction mapStateToProps(entries) {\n  return {\n    entries: entries\n  };\n}\n\nexport default connect(mapStateToProps)(History);","map":{"version":3,"sources":["/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/History.js"],"names":["React","Component","connect","receiveEntries","addEntry","timeToString","getDailyReminderValue","fetchCalendarResults","History","dispatch","props","then","entries","setState","ready","JSON","stringify","mapStateToProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,QAAzB;AACA,SAASC,YAAT,EAAuBC,qBAAvB;AACA,SAASC,oBAAT;;IAEMC,O;;;;;;;;;;;;;WACJ,6BAAqB;AAAA;;AAAA,UACXC,QADW,GACE,KAAKC,KADP,CACXD,QADW;AAGnBF,MAAAA,oBAAoB,GACjBI,IADH,CACQ,UAACC,OAAD;AAAA,eAAaH,QAAQ,CAACN,cAAc,CAACS,OAAD,CAAf,CAArB;AAAA,OADR,EAEGD,IAFH,CAEQ,gBAAiB;AAAA,YAAdC,OAAc,QAAdA,OAAc;;AACrB,YAAI,CAACA,OAAO,CAACP,YAAY,EAAb,CAAZ,EAA8B;AAC5BI,UAAAA,QAAQ,CAACL,QAAQ,qBACdC,YAAY,EADE,EACGC,qBAAqB,EADxB,EAAT,CAAR;AAGD;AACF,OARH,EASGK,IATH,CASQ;AAAA,eAAM,KAAI,CAACE,QAAL,CAAc;AAAA,iBAAO;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAP;AAAA,SAAd,CAAN;AAAA,OATR;AAUD;;;WACD,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,IAAI,CAACC,SAAL,CAAe,KAAKN,KAApB,CAAP,CADF,CADF;AAKD;;;;EArBmBT,S;;AAwBtB,SAASgB,eAAT,CAA0BL,OAA1B,EAAmC;AACjC,SAAO;AACLA,IAAAA,OAAO,EAAPA;AADK,GAAP;AAGD;;AAED,eAAeV,OAAO,CACpBe,eADoB,CAAP,CAEbT,OAFa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { receiveEntries, addEntry } from '../actions'\nimport { timeToString, getDailyReminderValue } from '../utils/helpers'\nimport { fetchCalendarResults } from '../utils/api'\n\nclass History extends Component {\n  componentDidMount () {\n    const { dispatch } = this.props\n\n    fetchCalendarResults()\n      .then((entries) => dispatch(receiveEntries(entries)))\n      .then(({ entries }) => {\n        if (!entries[timeToString()]) {\n          dispatch(addEntry({\n            [timeToString()]: getDailyReminderValue()\n          }))\n        }\n      })\n      .then(() => this.setState(() => ({ready: true})))\n  }\n  render() {\n    return (\n      <View>\n        <Text>{JSON.stringify(this.props)}</Text>\n      </View>\n    )\n  }\n}\n\nfunction mapStateToProps (entries) {\n  return {\n    entries\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(History)"]},"metadata":{},"sourceType":"module"}