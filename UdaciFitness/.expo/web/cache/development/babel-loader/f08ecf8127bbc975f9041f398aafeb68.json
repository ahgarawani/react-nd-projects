{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/AddEntry.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getMetricMetaInfo, timeToString, getDailyReminderValue } from \"../utils/helpers\";\nimport UdaciSlider from \"./UdaciSlider\";\nimport UdaciSteppers from \"./UdaciSteppers\";\nimport DateHeader from \"./DateHeader\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport TextButton from \"./TextButton\";\nimport { submitEntry, removeEntry } from \"../utils/api\";\nimport { connect } from 'react-redux';\nimport { addEntry } from \"../actions\";\nimport { purple, white } from \"../utils/colors\";\n\nfunction SubmitBtn(_ref) {\n  var onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: Platform.OS === 'ios' ? styles.iosSubmitBtn : styles.AndroidSubmitBtn,\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.submitBtnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"SUBMIT\"));\n}\n\nvar AddEntry = function (_Component) {\n  _inherits(AddEntry, _Component);\n\n  var _super = _createSuper(AddEntry);\n\n  function AddEntry() {\n    var _this;\n\n    _classCallCheck(this, AddEntry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      run: 0,\n      bike: 0,\n      swim: 0,\n      sleep: 0,\n      eat: 0\n    };\n\n    _this.increment = function (metric) {\n      var _getMetricMetaInfo = getMetricMetaInfo(metric),\n          max = _getMetricMetaInfo.max,\n          step = _getMetricMetaInfo.step;\n\n      _this.setState(function (state) {\n        var count = state[metric] + step;\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, metric, count > max ? max : count));\n      });\n    };\n\n    _this.decrement = function (metric) {\n      _this.setState(function (state) {\n        var count = state[metric] - getMetricMetaInfo(metric).step;\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, metric, count < 0 ? 0 : count));\n      });\n    };\n\n    _this.slide = function (metric, value) {\n      _this.setState(function () {\n        return _defineProperty({}, metric, value);\n      });\n    };\n\n    _this.submit = function () {\n      var key = timeToString();\n      var entry = [_this.state];\n\n      _this.props.dispatch(addEntry(_defineProperty({}, key, entry)));\n\n      _this.setState(function () {\n        return {\n          run: 0,\n          bike: 0,\n          swim: 0,\n          sleep: 0,\n          eat: 0\n        };\n      });\n\n      submitEntry({\n        key: key,\n        entry: entry\n      });\n    };\n\n    _this.reset = function () {\n      var key = timeToString();\n\n      _this.props.dispatch(addEntry(_defineProperty({}, key, getDailyReminderValue())));\n\n      removeEntry(key);\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEntry, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var metaInfo = getMetricMetaInfo();\n\n      if (this.props.alreadyLogged) {\n        return React.createElement(View, {\n          style: styles.center,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }\n        }, React.createElement(Ionicons, {\n          name: Platform.OS === 'ios' ? 'ios-happy-outline' : 'md-happy',\n          size: 100,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }\n        }, \"You already logged your information for today.\"), React.createElement(TextButton, {\n          style: {\n            padding: 10\n          },\n          onPress: this.reset,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, \"Reset\"));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, React.createElement(DateHeader, {\n        date: new Date().toLocaleDateString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }), Object.keys(metaInfo).map(function (key) {\n        var _metaInfo$key = metaInfo[key],\n            getIcon = _metaInfo$key.getIcon,\n            type = _metaInfo$key.type,\n            rest = _objectWithoutProperties(_metaInfo$key, [\"getIcon\", \"type\"]);\n\n        var value = _this2.state[key];\n        return React.createElement(View, {\n          key: key,\n          style: styles.row,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, getIcon(), type === 'slider' ? React.createElement(UdaciSlider, _extends({\n          value: value,\n          onChange: function onChange(value) {\n            return _this2.slide(key, value);\n          }\n        }, rest, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }\n        })) : React.createElement(UdaciSteppers, _extends({\n          value: value,\n          onIncrement: function onIncrement() {\n            return _this2.increment(key);\n          },\n          onDecrement: function onDecrement() {\n            return _this2.decrement(key);\n          }\n        }, rest, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }\n        })));\n      }), React.createElement(SubmitBtn, {\n        onPress: this.submit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AddEntry;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: white\n  },\n  row: {\n    flexDirection: 'row',\n    flex: 1,\n    alignItems: 'center'\n  },\n  iosSubmitBtn: {\n    backgroundColor: purple,\n    padding: 10,\n    borderRadius: 7,\n    height: 45,\n    marginLeft: 40,\n    marginRight: 40\n  },\n  AndroidSubmitBtn: {\n    backgroundColor: purple,\n    padding: 10,\n    paddingLeft: 30,\n    paddingRight: 30,\n    height: 45,\n    borderRadius: 2,\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  submitBtnText: {\n    color: white,\n    fontSize: 22,\n    textAlign: 'center'\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 30,\n    marginRight: 30\n  }\n});\n\nfunction mapStateToProps(state) {\n  var key = timeToString();\n  return {\n    alreadyLogged: state[key] && typeof state[key].today === 'undefined'\n  };\n}\n\nexport default connect(mapStateToProps)(AddEntry);","map":{"version":3,"sources":["/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/AddEntry.js"],"names":["React","Component","getMetricMetaInfo","timeToString","getDailyReminderValue","UdaciSlider","UdaciSteppers","DateHeader","Ionicons","TextButton","submitEntry","removeEntry","connect","addEntry","purple","white","SubmitBtn","onPress","Platform","OS","styles","iosSubmitBtn","AndroidSubmitBtn","submitBtnText","AddEntry","state","run","bike","swim","sleep","eat","increment","metric","max","step","setState","count","decrement","slide","value","submit","key","entry","props","dispatch","reset","metaInfo","alreadyLogged","center","padding","container","Date","toLocaleDateString","Object","keys","map","getIcon","type","rest","row","StyleSheet","create","flex","backgroundColor","flexDirection","alignItems","borderRadius","height","marginLeft","marginRight","paddingLeft","paddingRight","alignSelf","justifyContent","color","fontSize","textAlign","mapStateToProps","today"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View, TouchableOpacity, Text, StyleSheet, Platform } from 'react-native'\nimport { getMetricMetaInfo, timeToString, getDailyReminderValue } from '../utils/helpers'\nimport UdaciSlider from './UdaciSlider'\nimport UdaciSteppers from './UdaciSteppers'\nimport DateHeader from './DateHeader'\nimport { Ionicons } from \"@expo/vector-icons\"\nimport TextButton from \"./TextButton\"\nimport { submitEntry, removeEntry } from '../utils/api'\nimport { connect } from 'react-redux'\nimport { addEntry } from '../actions'\nimport { purple, white } from '../utils/colors'\n\nfunction SubmitBtn ({ onPress }) {\n  return (\n    <TouchableOpacity\n      style={Platform.OS === 'ios' ? styles.iosSubmitBtn : styles.AndroidSubmitBtn}\n      onPress={onPress}>\n        <Text style={styles.submitBtnText}>SUBMIT</Text>\n    </TouchableOpacity>\n  )\n}\n\nclass AddEntry extends Component {\n  state = {\n    run: 0,\n    bike: 0,\n    swim: 0,\n    sleep: 0,\n    eat: 0,\n  }\n\n  increment = (metric) => {\n    const { max, step } = getMetricMetaInfo(metric)\n\n    this.setState((state) => {\n      const count = state[metric] + step\n\n      return {\n        ...state,\n        [metric]: count > max ? max : count,\n      }\n    })\n  }\n\n  decrement = (metric) => {\n    this.setState((state) => {\n      const count = state[metric] - getMetricMetaInfo(metric).step\n\n      return {\n        ...state,\n        [metric]: count < 0 ? 0 : count,\n      }\n    })\n  }\n\n  slide = (metric, value) => {\n    this.setState(() => ({\n      [metric]: value\n    }))\n  }\n\n  submit = () => {\n    const key = timeToString()\n    const entry = [this.state]\n\n    this.props.dispatch(addEntry({\n      [key]: entry\n    }))\n\n    this.setState(() => ({ run: 0, bike: 0, swim: 0, sleep: 0, eat: 0 }))\n\n    // Navigate to home\n\n    submitEntry({ key, entry })\n\n    // Clear local notification\n  }\n\n  reset = () => {\n    const key = timeToString()\n\n    this.props.dispatch(addEntry({\n      [key]: getDailyReminderValue()\n    }))\n\n    // Route to Home\n\n    removeEntry(key)\n  }\n\n  render(){\n    const metaInfo = getMetricMetaInfo()\n\n    if (this.props.alreadyLogged) {\n      return (\n        <View style={styles.center}>\n          <Ionicons\n            name={Platform.OS === 'ios' ? 'ios-happy-outline' : 'md-happy'}\n            size={100}\n          />\n          <Text>You already logged your information for today.</Text>\n          <TextButton style={{padding: 10}} onPress={this.reset}>\n            Reset\n          </TextButton>\n        </View>\n      )\n    }\n\n    return (\n      <View style={styles.container}>\n        <DateHeader date={(new Date()).toLocaleDateString()}/>\n        {Object.keys(metaInfo).map((key) => {\n          const { getIcon, type, ...rest } = metaInfo[key]\n          const value = this.state[key]\n\n          return (\n            <View key={key} style={styles.row}>\n              {getIcon()}\n              {type === 'slider'\n                ? <UdaciSlider\n                    value={value}\n                    onChange={(value) => this.slide(key, value)}\n                    {...rest}\n                  />\n                : <UdaciSteppers\n                    value={value}\n                    onIncrement={() => this.increment(key)}\n                    onDecrement={() => this.decrement(key)}\n                    {...rest}\n                  />}\n            </View>\n          )\n        })}\n        <SubmitBtn onPress={this.submit} />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: white\n  },\n  row: {\n    flexDirection: 'row',\n    flex: 1,\n    alignItems: 'center',\n  },\n  iosSubmitBtn: {\n    backgroundColor: purple,\n    padding: 10,\n    borderRadius: 7,\n    height: 45,\n    marginLeft: 40,\n    marginRight: 40,\n  },\n  AndroidSubmitBtn: {\n    backgroundColor: purple,\n    padding: 10,\n    paddingLeft: 30,\n    paddingRight: 30,\n    height: 45,\n    borderRadius: 2,\n    alignSelf: 'flex-end',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  submitBtnText: {\n    color: white,\n    fontSize: 22,\n    textAlign: 'center',\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 30,\n    marginRight: 30,\n  },\n})\n\nfunction mapStateToProps (state) {\n  const key = timeToString()\n\n  return {\n    alreadyLogged: state[key] && typeof state[key].today === 'undefined'\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(AddEntry)"]},"metadata":{},"sourceType":"module"}