{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/History.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { receiveEntries, addEntry } from \"../actions\";\nimport { timeToString, getDailyReminderValue } from \"../utils/helpers\";\nimport { fetchCalendarResults } from \"../utils/api\";\nimport DateHeaders from \"./DateHeaders\";\nimport MetricCard from \"./MetricCard\";\nimport EntryDetail from \"./EntryDetail\";\nimport { Agenda as UdaciFitnessCalendar } from 'react-native-calendars';\nimport { AppLoading } from 'expo';\n\nvar History = function (_Component) {\n  _inherits(History, _Component);\n\n  var _super = _createSuper(History);\n\n  function History() {\n    var _this;\n\n    _classCallCheck(this, History);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      ready: false,\n      selectedDate: new Date().toISOString().slice(0, 10)\n    };\n\n    _this.renderItem = function (dateKey, _ref, firstItemInDay) {\n      var today = _ref.today,\n          metrics = _objectWithoutProperties(_ref, [\"today\"]);\n\n      return React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      }, today ? React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.noDataText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, today)) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Entry Detail', {\n            entryId: dateKey\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, React.createElement(MetricCard, {\n        metrics: metrics,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    _this.onDayPress = function (day) {\n      _this.setState({\n        selectedDate: day.dateString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var dispatch = this.props.dispatch;\n      fetchCalendarResults().then(function (entries) {\n        return dispatch(receiveEntries(entries));\n      }).then(function (_ref2) {\n        var entries = _ref2.entries;\n\n        if (!entries[timeToString()]) {\n          dispatch(addEntry(_defineProperty({}, timeToString(), getDailyReminderValue())));\n        }\n      }).then(function () {\n        return _this2.setState(function () {\n          return {\n            ready: true\n          };\n        });\n      });\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.noDataText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, \"You didn't log any data on this day.\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var entries = this.props.entries;\n      var _this$state = this.state,\n          ready = _this$state.ready,\n          selectedDate = _this$state.selectedDate;\n\n      if (ready === false) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return React.createElement(UdaciFitnessCalendar, {\n        items: entries,\n        onDayPress: this.onDayPress,\n        renderItem: function renderItem(item, firstItemInDay) {\n          return _this3.renderItem(selectedDate, item, firstItemInDay);\n        },\n        renderEmptyDate: this.renderEmptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return History;\n}(Component);\n\nvar styles = StyleSheet.create({\n  item: {\n    padding: 20,\n    borderRadius: Platform.OS === 'ios' ? 16 : 2,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 17,\n    justifyContent: 'center',\n    shadowRadius: 3,\n    shadowOpacity: 0.8,\n    shadowColor: 'rgba(0,0,0,24)',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  },\n  noDataText: {\n    fontSize: 20,\n    paddingTop: 20,\n    paddingBottom: 20\n  }\n});\n\nfunction mapStateToProps(entries) {\n  return {\n    entries: entries\n  };\n}\n\nexport default connect(mapStateToProps)(History);","map":{"version":3,"sources":["/home/ahgarawani/learning/react-nanodegree/UdaciFitness/components/History.js"],"names":["React","Component","connect","receiveEntries","addEntry","timeToString","getDailyReminderValue","fetchCalendarResults","DateHeaders","MetricCard","EntryDetail","Agenda","UdaciFitnessCalendar","AppLoading","History","state","ready","selectedDate","Date","toISOString","slice","renderItem","dateKey","firstItemInDay","today","metrics","styles","item","noDataText","props","navigation","navigate","entryId","onDayPress","day","setState","dateString","dispatch","then","entries","renderEmptyDate","StyleSheet","create","padding","borderRadius","Platform","OS","marginLeft","marginRight","marginTop","justifyContent","shadowRadius","shadowOpacity","shadowColor","shadowOffset","width","height","fontSize","paddingTop","paddingBottom","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text, StyleSheet, Platform, TouchableOpacity } from 'react-native'\nimport { connect } from 'react-redux'\nimport { receiveEntries, addEntry } from '../actions'\nimport { timeToString, getDailyReminderValue } from '../utils/helpers'\nimport { fetchCalendarResults } from '../utils/api'\nimport DateHeaders from './DateHeaders'\nimport MetricCard from './MetricCard'\nimport EntryDetail from './EntryDetail'\n// import UdaciFitnessCalendar from 'udacifitness-calendar-fix'\nimport {Agenda as UdaciFitnessCalendar } from 'react-native-calendars'\nimport { AppLoading } from 'expo'\n\n\n\nclass History extends Component {\n  state = {\n      ready: false,\n      selectedDate: new Date().toISOString().slice(0,10),\n  }\n  \n  componentDidMount () {\n    const { dispatch } = this.props\n\n    fetchCalendarResults()\n      .then((entries) => dispatch(receiveEntries(entries)))\n      .then(({ entries }) => {\n        if (!entries[timeToString()]) {\n          dispatch(addEntry({\n            [timeToString()]: getDailyReminderValue()\n          }))\n        }\n      })\n      .then(() => this.setState(() => ({ready: true})))\n  }\n\n  renderItem = (dateKey, { today, ...metrics }, firstItemInDay) => (\n    <View style={styles.item}>\n      {today\n        ? <View>\n            {/* <DateHeaders date={formattedDate} /> */}\n            <Text style={styles.noDataText}>\n                {today}\n            </Text>\n        </View>\n        : <TouchableOpacity onPress={()=> this.props.navigation.navigate('Entry Detail',\n        { entryId: dateKey })}>\n                <MetricCard metrics={metrics} />\n            </TouchableOpacity>}\n    </View>\n  )\n\n  onDayPress = (day) => {\n    this.setState({\n      selectedDate: day.dateString\n    })\n  };\n\n  renderEmptyDate() {\n    return (\n        <View>\n        {/* <DateHeaders date={formattedDate} /> */}\n        <Text style={styles.noDataText}>\n            You didn't log any data on this day.\n        </Text>\n    </View>\n    )\n  }\n  render() {\n    const { entries } = this.props\n    const { ready, selectedDate } = this.state\n    if (ready === false) {\n        return <AppLoading />\n    }\n\n\n\n    return (\n      <UdaciFitnessCalendar\n        items={entries}\n        onDayPress={this.onDayPress}\n        renderItem={(item, firstItemInDay) => this.renderItem(selectedDate, item, firstItemInDay)}\n        renderEmptyDate={this.renderEmptyDate}\n      />\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        padding: 20,\n        borderRadius: Platform.OS === 'ios' ? 16 : 2,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 17,\n        justifyContent: 'center',\n        shadowRadius:3,\n        shadowOpacity: 0.8,\n        shadowColor: 'rgba(0,0,0,24)',\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        }\n    },\n    noDataText: {\n        fontSize: 20,\n        paddingTop: 20,\n        paddingBottom: 20\n        }\n})\n\nfunction mapStateToProps (entries) {\n  return {\n    entries\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(History)"]},"metadata":{},"sourceType":"module"}